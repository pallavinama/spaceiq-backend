openapi: 3.0.3
info:
  title: Api Documentation
  description: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
  version: '1.0'
servers:
  - url: 'http://localhost:8042'
    description: Inferred Url
tags:
  - name: booking-controller
    description: Booking Controller
  - name: employee-controller
    description: Employee Controller
paths:
  /edge/bookings:
    get:
      tags:
        - booking-controller
      summary: getAllBookings
      operationId: getAllBookingsUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - booking-controller
      summary: addBooking
      operationId: addBookingUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Booking'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/edge/bookings/{id}':
    delete:
      tags:
        - booking-controller
      summary: deleteBooking
      operationId: deleteBookingUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /edge/employee:
    get:
      tags:
        - employee-controller
      summary: getAllEmployees
      operationId: getAllEmployeesUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/edge/employee/{id}':
    get:
      tags:
        - employee-controller
      summary: getEmployeeById
      operationId: getEmployeeByIdUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - employee-controller
      summary: updateEmployee
      operationId: updateEmployeeUsingPUT
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    Booking:
      title: Booking
      type: object
      properties:
        date:
          type: string
          format: date-time
        deskId:
          type: integer
          format: int32
        employeeId:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
    Employee:
      title: Employee
      type: object
      properties:
        address:
          type: string
        authority:
          type: string
        email:
          type: string
        firstName:
          type: string
        id:
          type: integer
          format: int32
        lastName:
          type: string
        password:
          type: string
        phoneNumber:
          type: integer
          format: int32
